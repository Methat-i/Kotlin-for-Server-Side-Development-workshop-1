package org.example

// Workshop #1: Simple Console Application - Unit Converter

fun main() {
    // 2. ‡πÉ‡∏ä‡πâ while (true) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ß‡∏ô‡∏ã‡πâ‡∏≥
    while (true) {
        // 1. ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
        println("===== Unit Converter =====")
        println("‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á:")
        println("1. Celsius to Fahrenheit")
        println("2. Kilometers to Miles")
        println("‡∏û‡∏¥‡∏°‡∏û‡πå 'exit' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°")
        print("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π (1, 2, or exit): ")

        // 2. ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        var choice = readln()
        when (choice) {
            "1"->{
                convertCelsiusToFahrenheit()
            }
            "2"->{
                convertKilometersToMiles()
            }
            ""->{
                break
            }
        }

        // 3. ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏î‡πâ‡∏ß‡∏¢ when expression
        // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å 1 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏õ‡∏•‡∏á Celsius ‡πÄ‡∏õ‡πá‡∏ô Fahrenheit: convertCelsiusToFahrenheit()
        // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å 2 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏õ‡∏•‡∏á Kilometers ‡πÄ‡∏õ‡πá‡∏ô Miles: convertKilometersToMiles()
        // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å 'exit' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°
        // üö®


        println() // ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°
    }
}

// 4. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏¢‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡∏´‡∏ô‡πà‡∏ß‡∏¢ Celsius to Fahrenheit: celsiusToFahrenheit
// ‡∏™‡∏π‡∏ï‡∏£ celsius * 9.0 / 5.0 + 32
// üö®


// 4. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏¢‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡∏´‡∏ô‡πà‡∏ß‡∏¢ Kilometers to Miles: kilometersToMiles
// ‡∏™‡∏π‡∏ï‡∏£ kilometers * 0.621371
// üö®


// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á Celsius to Fahrenheit ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
fun convertCelsiusToFahrenheit() {
    print("‡∏õ‡πâ‡∏≠‡∏ô‡∏Ñ‡πà‡∏≤‡∏≠‡∏á‡∏®‡∏≤‡πÄ‡∏ã‡∏•‡πÄ‡∏ã‡∏µ‡∏¢‡∏™ (Celsius): ")
    val input = readln()
    val celsius = input.toDoubleOrNull() ?: return

    // 5. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Null Safety ‡∏î‡πâ‡∏ß‡∏¢ toDoubleOrNull() ‡πÅ‡∏•‡∏∞ Elvis operator (?:)
    // ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô convertCelsiusToFahrenheit() ‡∏´‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: return
    // celsius
    // üö®


    val fahrenheitResult = celsius * 9.0 / 5.0 + 32

    // 6. ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    // ‡πÉ‡∏ä‡πâ String format ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏° 2 ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
    println("‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå: $celsius ¬∞C ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö ${"%.2f".format(fahrenheitResult)} ¬∞F")
//üö®    val fahrenheitResult = celsiusToFahrenheit(celsius)

    // 6. ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    // ‡πÉ‡∏ä‡πâ String format ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏° 2 ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
    //üö®    println("‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå: $celsius ¬∞C ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö ${"%.2f".format(fahrenheitResult)} ¬∞F")
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á Kilometers to Miles ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
fun convertKilometersToMiles() {
    print("‡∏õ‡πâ‡∏≠‡∏ô‡∏Ñ‡πà‡∏≤‡∏Å‡∏¥‡πÇ‡∏•‡πÄ‡∏°‡∏ï‡∏£ (Kilometers): ")
    val input = readln()
    val kilometersToMiles = input.toDoubleOrNull() ?: return
    val kilometers = kilometersToMiles

    // 5. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Null Safety ‡∏î‡πâ‡∏ß‡∏¢ toDoubleOrNull() ‡πÅ‡∏•‡∏∞ Elvis operator (?:)
    // ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô convertKilometersToMiles() ‡∏´‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: return
    // kilometers
    // üö®


    val milesResult = kilometersToMiles* 0.621371

    // 6. ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    println("‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå: $kilometers km ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö ${"%.2f".format(milesResult)} miles")
//üö®    val milesResult = kilometersToMiles(kilometers)

    // 6. ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
//üö®    println("‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå: $kilometers km ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö ${"%.2f".format(milesResult)} miles")
}